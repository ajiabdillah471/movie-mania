import React from "react";
import { useState, useEffect } from "react";
import axios from "axios";
import MovieCard from "./component/MovieCard";
import YouTube from "react-youtube";

const AppTiga = () => {
  const [movies, setMovies] = useState([]);
  const [searchKey, setSearchKey] = useState("");
  const [selectMovie, setSelectMovie] = useState({});

  const API_URL = "https://api.themoviedb.org/3/";
  //   const apiKey = "d23ede28a0705a62134b1efa38c65fbb";
  const imgUrl = "https://image.tmdb.org/t/p/original/";

  const fetchMovie = async (searchKey) => {
    const type = searchKey ? `search` : `discover`;
    const {
      data: { results },
    } = await axios.get(`${API_URL}/${type}/movie?`, {
      params: {
        api_key: process.env.REACT_APP_APIKEY,
        query: searchKey,
      },
    });

    setSelectMovie(results[1]);
    setMovies(results);
  };
  //   const fetchMovie = async () => {
  //     // const type = searchKey
  //     //   ? `/search/movie?query=${searchKey}`
  //     //   : `/discover/movie/?api_key=${apiKey}`;
  //     const data = await axios
  //       //   .get(`${API_URL}${type}`)
  //       .get(`${API_URL}/discover/movie/?api_key=${apiKey}`)
  //       .then((response) => {
  //         // setMovies(results);
  //         setMovies(response.data.results);
  //       })
  //       .catch((err) => {
  //         console.log("errorr");
  //       });
  //   };

  useEffect(() => {
    fetchMovie();
  }, []);

  //   console.log(movies.results);

  const renderMovie = () => {
    return movies.map((movie) => {
      return <MovieCard key={movie.id} film={movie} select={setSelectMovie} />;
    });
  };

  const searchMovie = (e) => {
    e.preventDefault();
    fetchMovie(searchKey);
  };

  // console.log(hero);

  // ini data untuk menjalankan trailer
  const fetchMovies = async (id) => {
    const { data } = await axios.get(`${API_URL}/${id}`, {
      params: {
        api_key: process.env.REACT_APP_APIKEY,
      },
    });
    return data;
  };

  const selectMovies = (id) => {
    const movie = fetchMovies(id);
    setSelectMovie(movie);
  };

  return (
    <div className="bg-[#090a0e]">
      <header className="container flex justify-between mx-auto p-10">
        <h1 className="text-white font-bold text-2xl capitalize">
          movie mania
        </h1>
        <form action="" onSubmit={searchMovie} className="">
          <input
            type="text"
            className="border-2 py-1 p-2 rounded-sm "
            onChange={(e) => {
              setSearchKey(e.target.value);
            }}
          />

          <button
            type={"submit"}
            className="px-6 py-1 bg-white ml-2 rounded-sm shadow-md hover:bg-slate-900 hover:text-white hover:border hover:border-white transition duration-500"
          >
            Search!
          </button>
        </form>
        {/* {searchKey} ini untuk mengecek e.target.value */}
      </header>

      {/* ini bagian hero */}
      <section>
        <div
          className="flex items-end  text-white  h-[500px] bg-cover bg-center p-6"
          style={{
            backgroundImage: `url('${imgUrl}${selectMovie.backdrop_path}')`,
          }}
        >
          <YouTube />
          <div className="container w-[80%] mx-auto ">
            <button className="font-bold text-xl px-8 py-2 bg-slate-900 rounded-sm shadow-md transition duration-300 mb-10 hover:bg-slate-950">
              Play Trailer
            </button>
            <div className="">
              <h1 className="font-bold text-5xl mb-5 text-white ">
                {selectMovie.title}
              </h1>
              <p className="mb-10">
                {selectMovie.overview ? selectMovie.overview : null}
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* ini bagian popular movie */}
      <section className="">
        <div>
          <h2 className="bg-slate-900 container mx-auto pt-6 pl-10 text-white font-bold text-2xl">
            Popular
          </h2>
        </div>
        <div className="container flex flex-wrap justify-center p-10 mx-auto  bg-slate-900 ">
          {renderMovie()}
        </div>
      </section>
    </div>
  );
};

// ini contoh bg inline css
// const bg = {
//   backgroundImage: `url(https://image.tmdb.org/t/p/original/fI5RsaM0NSU6TqztRhA2pal5ezv.jpg)`,
// };
export default AppTiga;
